entry control event rule_filter_1(int<<32>> CTR,int<<32>> src,int<<32>> dst,int<<32>> bytes,int<<32>> QID,int<<32>> tout,int<<32>> t_in) ;

entry control event event_packet(int<<32>> CTR,int<<32>> src,int<<32>> dst,int<<32>> bytes,int<<32>> QID,int<<32>> tout,int<<32>> t_in) ;

global Array.t<<32>> filter_src = Array.create(1024);


global Array.t<<32>> filter_dst = Array.create(1024);


global Array.t<<32>> filter_bytes = Array.create(1024);


entry control event event_filter(int<<32>> src,int<<32>> src,int<<32>> dst,int<<32>> bytes) ;

handle event_packet(int<<32>> CTR,int<<32>> src,int<<32>> dst,int<<32>> bytes,int<<32>> QID,int<<32>> tout,int<<32>> t_in) {
if (tout-t_in>5&&QID==5) {
int<<32>> a = 6;
int<<16>> idx_3 = hash<<16>>(2048,src);
Array.set(filter_src,idx_3,src);
Array.set(filter_dst,idx_3,dst);
Array.set(filter_bytes,idx_3,bytes);
} 
}

handle event_filter(int<<32>> src,int<<32>> src,int<<32>> dst,int<<32>> bytes) {
int<<16>> idx_2 = hash<<16>>(2048,src);
Array.set(filter_src,idx_2,bytes);
Array.set(filter_dst,idx_2,dst);
Array.set(filter_bytes,idx_2,src);
}

handle rule_filter_1(int<<32>> CTR,int<<32>> src,int<<32>> dst,int<<32>> bytes,int<<32>> QID,int<<32>> tout,int<<32>> t_in) {
if (tout-t_in>5&&QID==5) {
int<<32>> a = 6;
int<<16>> idx_3 = hash<<16>>(2048,src);
Array.set(filter_src,idx_3,src);
Array.set(filter_dst,idx_3,dst);
Array.set(filter_bytes,idx_3,bytes);
} 
}
